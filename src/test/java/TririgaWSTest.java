/*
 * This Java source file was generated by the Gradle 'init' task.
 */

import com.google.gson.Gson;
import com.tririga.ws.Exception;
import com.tririga.ws.*;
import com.tririga.ws.dto.gui.GUI;
import org.testng.Assert;
import org.testng.annotations.BeforeSuite;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

import javax.xml.ws.BindingProvider;
import javax.xml.ws.handler.Handler;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.List;
import java.util.Map;
import java.util.Properties;

public class TririgaWSTest {

    private String password;
    private String username;
    private String url;
    private TririgaWS tririgaWS;
    private TririgaWSPortType ws;

    private final Gson gson = new Gson();

    @BeforeSuite
    void initAll() throws IOException {

        Properties properties = new Properties();

        properties.load(TririgaWSTest.class.getResourceAsStream("env.properties"));
        username = properties.getProperty("username");
        password = properties.getProperty("password");
        url = properties.getProperty("url");

    }

    @BeforeTest
    void init()throws MalformedURLException, Exception, InvalidArgumentException, ObjectTypeDoesNotExistException, RecordDoesNotExistException, GuiDoesNotExistException {


         tririgaWS = new TririgaWS(new URL(url));
         ws = tririgaWS.getTririgaWSPort();

        Map<String, Object> reqCtxt = ((javax.xml.ws.BindingProvider) ws).getRequestContext();
        reqCtxt.put(javax.xml.ws.BindingProvider.USERNAME_PROPERTY, username);
        reqCtxt.put(javax.xml.ws.BindingProvider.PASSWORD_PROPERTY, password);
        reqCtxt.put(javax.xml.ws.BindingProvider.ENDPOINT_ADDRESS_PROPERTY, url);

        BindingProvider wsBindingProvider = (BindingProvider) ws;

// Get a copy of the handler chain for a protocol binding instance
        List<Handler> handlers =
                wsBindingProvider.getBinding().getHandlerChain();

        handlers.add(new CustomSoapMessageLogger());

//        wsBindingProvider.getBinding().setHandlerChain(handlers);
    }

    //    @Parameters({ "first-name" })




    @Test
    void testLogin() throws InvalidArgumentException, ObjectTypeDoesNotExistException, Exception, RecordDoesNotExistException, GuiDoesNotExistException {



        System.out.println(ws.getObjectType(10002490L).getDisplayName());
        System.out.println(ws.getDefaultGUI(221931L).getName());
        System.out.println(gson.toJson(ws.getDefaultGUI(221931L)));


        System.out.printf("Modules:[%s]\n",gson.toJson(ws.getModules()));
        System.out.printf("Http Session:[%s]\n",gson.toJson(ws.getHttpSession()));

        for (GUI gui :
                ws.getGUIsByName("triPeople", "triPeople"))
            System.out.println(gson.toJson(gui));
        ;


    }

    @Test
    void testMyProfile() throws MalformedURLException, Exception, InvalidArgumentException, ObjectTypeDoesNotExistException, RecordDoesNotExistException, GuiDoesNotExistException {

        Assert.assertEquals(ws.getDefaultGUI(221931).getName(), "My Profile");

    }
}